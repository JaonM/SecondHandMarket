package com.market.itemactivity;

import android.app.ActionBar;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.Editable;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import com.market.activity.MainActivity;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONObject;

public class LeaveMessageActivity extends Activity
{
  EditText messageText;
  Button send;

  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(2130903061);
    this.messageText = ((EditText)findViewById(2131034242));
    this.send = ((Button)findViewById(2131034243));
    this.send.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        if (!MainActivity.isLogin)
        {
          Toast.makeText(LeaveMessageActivity.this, "需先登录才能进行留言", 0).show();
          return;
        }
        new LeaveMessageActivity.LeaveMessageTask(LeaveMessageActivity.this, null).execute(new String[] { "http://10.96.73.76:8080/SecondHandMarket/MessageServlet" });
      }
    });
    getActionBar().setDisplayHomeAsUpEnabled(true);
  }

  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    switch (paramMenuItem.getItemId())
    {
    default:
    case 16908332:
    }
    while (true)
    {
      return super.onOptionsItemSelected(paramMenuItem);
      finish();
    }
  }

  private class LeaveMessageTask extends AsyncTask<String, Void, String>
  {
    ProgressDialog progressDialog;

    private LeaveMessageTask()
    {
    }

    public String doInBackground(String[] paramArrayOfString)
    {
      String str = null;
      try
      {
        HttpURLConnection localHttpURLConnection = (HttpURLConnection)new URL(paramArrayOfString[0] + "?key=leaveMessage&userId=" + LeaveMessageActivity.this.getSharedPreferences("islogin", 0).getInt("userId", -1) + "&itemId=" + String.valueOf(LeaveMessageActivity.this.getIntent().getIntExtra("itemId", -1))).openConnection();
        localHttpURLConnection.setRequestMethod("POST");
        localHttpURLConnection.setDoInput(true);
        localHttpURLConnection.setDoOutput(true);
        localHttpURLConnection.setDefaultUseCaches(false);
        localHttpURLConnection.setRequestProperty("Charset", "UTF-8");
        localHttpURLConnection.setRequestProperty("Content-Type", "text/html");
        OutputStream localOutputStream = localHttpURLConnection.getOutputStream();
        PrintWriter localPrintWriter = new PrintWriter(localOutputStream);
        localPrintWriter.write(LeaveMessageActivity.this.messageText.getText().toString());
        Log.v("text", LeaveMessageActivity.this.messageText.getText().toString());
        localOutputStream.flush();
        localPrintWriter.close();
        localOutputStream.close();
        BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(localHttpURLConnection.getInputStream()));
        str = localBufferedReader.readLine();
        localBufferedReader.close();
        return str;
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
      }
      return str;
    }

    public void onPostExecute(String paramString)
    {
      if (paramString != null)
        try
        {
          String str = new JSONObject(paramString).getString("info");
          this.progressDialog.dismiss();
          if (str.equals("success"))
          {
            Toast.makeText(LeaveMessageActivity.this, "留言成功", 0).show();
            LeaveMessageActivity.this.finish();
            return;
          }
          if (str.equals("fail"))
          {
            Toast.makeText(LeaveMessageActivity.this, "留言失败", 0).show();
            return;
          }
        }
        catch (Exception localException)
        {
          localException.printStackTrace();
        }
    }

    public void onPreExecute()
    {
      this.progressDialog = new ProgressDialog(LeaveMessageActivity.this);
      this.progressDialog.setProgressStyle(0);
      this.progressDialog.setMessage("留言中");
      this.progressDialog.show();
    }
  }
}